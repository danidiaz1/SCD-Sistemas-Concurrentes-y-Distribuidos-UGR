Descripción de la solución al problema:

Primero, en la función de los filósofos, hemos incluido las acciones de sentarse y levantarse:


// Solicitar sentarse en la mesa al camarero
MPI_Ssend(NULL, 0, MPI_INT, id_camarero, etiq_sentar, MPI_COMM_WORLD);

// Confirmación de que el filósofo se puede sentar
MPI_Recv(NULL, 0, MPI_INT, id_camarero, etiq_sentar, MPI_COMM_WORLD, &estado);

...

// Levantarse de la mesa
MPI_Ssend(NULL, 0, MPI_INT, id_camarero, etiq_levantar, MPI_COMM_WORLD);

...

Como vemos, se han utilizado etiquetas para distinguir entre las operaciones. También, en la
operación para sentarse, el filósofo tiene que hacer un receive para esperar la confirmación
del camarero para hacerlo, ya que si hay 4 filósofos sentados tiene que esperar a que uno
se levante. Para levantarse esto no hace falta, se puede hacer sin la confirmación del camarero.



Segundo, en la función camarero, se ha implementado la funcionalidad descrita en el guión de
la siguiente manera (muy parecida al problema prodcons2-mu):

Se trata de un bucle infinito en el que primero determinamos el estado de la mesa y recibimos
los mensajes con etiquetas apropiadas según dicho estado:

if ( s < 4 ) // Si hay menos de 4 filósofos, se puede sentar
   id_etiq_aceptable = MPI_ANY_TAG ; // Para sentarse o levantarse
// Si no, solo se puede levantar
else 
   id_etiq_aceptable = etiq_levantar;

MPI_Recv( NULL, 0, MPI_INT, MPI_ANY_SOURCE, id_etiq_aceptable, MPI_COMM_WORLD, &estado);
id_filosofo = estado.MPI_SOURCE;


El último paso es decidir qué hacer en función del mensaje recibido, esto es, una petición
para sentarse o levantarse:

switch( estado.MPI_TAG ) { // leer emisor del mensaje en metadatos
      // petición para sentarse
      case etiq_sentar:
        s++; // Incrementamos el número de filósofos sentados
        // Le decimos al filósofo que se siente
        MPI_Ssend( NULL, 0, MPI_INT, id_filosofo, etiq_sentar, MPI_COMM_WORLD);
        break;
      // petición para levantarse
      case etiq_levantar:
        s--; // decrementamos el número de filósofos sentados
        break;
}

Y, obviamente, en el main se ha asignado al proceso camarero la función correspondiente:

// ejecutar la función correspondiente a 'id_propio'
if (id_propio == id_camarero)
	funcion_camarero();
else{
	if ( id_propio % 2 == 0 )  // si es par
   		funcion_filosofos( id_propio ); // es un filósofo
	else  // si es impar
   		funcion_tenedores( id_propio ); // es un tenedor
}


Listado parcial de la salida del programa:

Filósofo 0 solicita sentarse en la mesa.
Filósofo 2 solicita sentarse en la mesa.
Filósofo 6 solicita sentarse en la mesa.
Filósofo 8 solicita sentarse en la mesa.
Filósofo 4 solicita sentarse en la mesa.
Filósofo 2 se sienta en la mesa.
Filósofo 2 solicita ten. izq.3
Filósofo 2 solicita ten. der.1
Filósofo 2 comienza a comer
Ten. 3 ha sido cogido por filo. 2
Ten. 1 ha sido cogido por filo. 2
El camarero sienta al filosofo 2. Hay 1 filosofos sentados. 
El camarero sienta al filosofo 4. Hay 2 filosofos sentados. 
El camarero sienta al filosofo 6. Hay 3 filosofos sentados. 
Filósofo 4 se sienta en la mesa.
Filósofo 4 solicita ten. izq.5
Filósofo 4 solicita ten. der.3
Filósofo 6 se sienta en la mesa.
Filósofo 6 solicita ten. izq.7
Filósofo 6 solicita ten. der.5
Ten. 5 ha sido cogido por filo. 4
Ten. 7 ha sido cogido por filo. 6
Filósofo 8 se sienta en la mesa.
Filósofo 8 solicita ten. izq.9
El camarero sienta al filosofo 8. Hay 4 filosofos sentados. 
Ten. 9 ha sido cogido por filo. 8
Filósofo 8 solicita ten. der.7
Filósofo 4 comienza a comer
Ten. 1 ha sido liberado por filo. 2
Ten. 3 ha sido liberado por filo. 2
Ten. 3 ha sido cogido por filo. 4
Filósofo 2 suelta ten. izq. 3
Filósofo 2 suelta ten. der. 1
Filósofo 2 se levanta de la mesa.
Filosofo 2 comienza a pensar
El camarero ve que se levanta el filosofo 2. Hay 3 filosofos sentados. 
El camarero sienta al filosofo 0. Hay 4 filosofos sentados. 
Filósofo 0 se sienta en la mesa.
Filósofo 0 solicita ten. izq.1
Filósofo 0 solicita ten. der.10
Ten. 1 ha sido cogido por filo. 0
Filósofo 4 suelta ten. izq. 5
Filósofo 6 comienza a comer
Ten. 5 ha sido liberado por filo. 4
Ten. 5 ha sido cogido por filo. 6
Filósofo 4 suelta ten. der. 3
Filósofo 4 se levanta de la mesa.
Filosofo 4 comienza a pensar
El camarero ve que se levanta el filosofo 4. Hay 3 filosofos sentados. 
Ten. 3 ha sido liberado por filo. 4
Filósofo 0 comienza a comer
Filósofo 2 solicita sentarse en la mesa.
Filósofo 2 se sienta en la mesa.
Filósofo 2 solicita ten. izq.3
Filósofo 2 solicita ten. der.1
Ten. 3 ha sido cogido por filo. 2
El camarero sienta al filosofo 2. Hay 4 filosofos sentados. 
Filósofo 4 solicita sentarse en la mesa.
Filósofo 0 suelta ten. izq. 1
Ten. 1 ha sido liberado por filo. 0
Ten. 1 ha sido cogido por filo. 2
Filósofo 0 suelta ten. der. 10
Filósofo 2 comienza a comer
Filósofo 6 suelta ten. izq. 7
Filósofo 6 suelta ten. der. 5
Ten. 7 ha sido liberado por filo. 6
Ten. 7 ha sido cogido por filo. 8
El camarero ve que se levanta el filosofo 6. Hay 3 filosofos sentados. 
El camarero sienta al filosofo 4. Hay 4 filosofos sentados. 
Filósofo 6 se levanta de la mesa.
Filosofo 6 comienza a pensar
Ten. 5 ha sido liberado por filo. 6
Ten. 5 ha sido cogido por filo. 4
Filósofo 8 comienza a comer
Filósofo 4 se sienta en la mesa.
Filósofo 4 solicita ten. izq.5
Filósofo 4 solicita ten. der.3
Ten. 3 ha sido liberado por filo. 2
Ten. 3 ha sido cogido por filo. 4
El camarero ve que se levanta el filosofo 2. Hay 3 filosofos sentados. 
El camarero ve que se levanta el filosofo 0. Hay 2 filosofos sentados. 
Filósofo 2 suelta ten. izq. 3
Filósofo 2 suelta ten. der. 1
Filósofo 2 se levanta de la mesa.
Filosofo 2 comienza a pensar
Ten. 1 ha sido liberado por filo. 2
Filósofo 0 se levanta de la mesa.
Filosofo 0 comienza a pensar
Filósofo 4 comienza a comer
Filósofo 2 solicita sentarse en la mesa.
Filósofo 2 se sienta en la mesa.
Filósofo 2 solicita ten. izq.3
El camarero sienta al filosofo 2. Hay 3 filosofos sentados. 
Filósofo 6 solicita sentarse en la mesa.
Filósofo 6 se sienta en la mesa.
Filósofo 6 solicita ten. izq.7
El camarero sienta al filosofo 6. Hay 4 filosofos sentados. 
Filósofo 0 solicita sentarse en la mesa.
Filósofo 8 suelta ten. izq. 9
Filósofo 8 suelta ten. der. 7
Ten. 9 ha sido liberado por filo. 8
Ten. 7 ha sido liberado por filo. 8
Ten. 7 ha sido cogido por filo. 6
Filósofo 8 se levanta de la mesa.
El camarero ve que se levanta el filosofo 8. Hay 3 filosofos sentados. 
El camarero sienta al filosofo 0. Hay 4 filosofos sentados. 
Filósofo 0 se sienta en la mesa.
Filósofo 0 solicita ten. izq.1
Filósofo 0 solicita ten. der.10
Filosofo 8 comienza a pensar
Ten. 1 ha sido cogido por filo. 0
Filósofo 6 solicita ten. der.5
Filósofo 4 suelta ten. izq. 5
Ten. 5 ha sido liberado por filo. 4
Filósofo 4 suelta ten. der. 3
Filósofo 4 se levanta de la mesa.
El camarero ve que se levanta el filosofo 4. Hay 3 filosofos sentados. 
Filosofo 4 comienza a pensar
Ten. 3 ha sido liberado por filo. 4
Ten. 3 ha sido cogido por filo. 2
Filósofo 2 solicita ten. der.1
Ten. 5 ha sido cogido por filo. 6
Filósofo 0 comienza a comer
Filósofo 6 comienza a comer
Filósofo 2 comienza a comer
El camarero ve que se levanta el filosofo 0. Hay 2 filosofos sentados. 
Filósofo 0 suelta ten. izq. 1
Filósofo 0 suelta ten. der. 10
Filósofo 0 se levanta de la mesa.
Filosofo 0 comienza a pensar
Ten. 1 ha sido liberado por filo. 0
Ten. 1 ha sido cogido por filo. 2
El camarero ve que se levanta el filosofo 6. Hay 1 filosofos sentados. 
Ten. 5 ha sido liberado por filo. 6
Ten. 7 ha sido liberado por filo. 6
Filósofo 6 suelta ten. izq. 7
Filósofo 6 suelta ten. der. 5
Filósofo 6 se levanta de la mesa.
Filosofo 6 comienza a pensar
Filósofo 4 solicita sentarse en la mesa.
Filósofo 4 se sienta en la mesa.
Filósofo 4 solicita ten. izq.5
Filósofo 4 solicita ten. der.3
El camarero sienta al filosofo 4. Hay 2 filosofos sentados. 
Ten. 5 ha sido cogido por filo. 4
Filósofo 8 solicita sentarse en la mesa.
Filósofo 8 se sienta en la mesa.
Filósofo 8 solicita ten. izq.9
El camarero sienta al filosofo 8. Hay 3 filosofos sentados. 
Ten. 9 ha sido cogido por filo. 8
Filósofo 8 solicita ten. der.7
Ten. 7 ha sido cogido por filo. 8
Filósofo 8 comienza a comer
El camarero sienta al filosofo 6. Hay 4 filosofos sentados. 
Filósofo 6 solicita sentarse en la mesa.
Filósofo 6 se sienta en la mesa.
Filósofo 6 solicita ten. izq.7
Filósofo 2 suelta ten. izq. 3
Filósofo 2 suelta ten. der. 1
El camarero ve que se levanta el filosofo 2. Hay 3 filosofos sentados. 
Ten. 3 ha sido liberado por filo. 2
Ten. 3 ha sido cogido por filo. 4
Ten. 1 ha sido liberado por filo. 2
Filósofo 2 se levanta de la mesa.
Filosofo 2 comienza a pensar
Filósofo 4 comienza a comer
Filósofo 0 solicita sentarse en la mesa.
Filósofo 0 se sienta en la mesa.
Filósofo 0 solicita ten. izq.1
Filósofo 0 solicita ten. der.10
Ten. 1 ha sido cogido por filo. 0
El camarero sienta al filosofo 0. Hay 4 filosofos sentados. 
Filósofo 8 suelta ten. izq. 9
Ten. 7 ha sido liberado por filo. 8
Ten. 7 ha sido cogido por filo. 6
Filósofo 8 suelta ten. der. 7
Ten. 9 ha sido liberado por filo. 8
Filósofo 8 se levanta de la mesa.
El camarero ve que se levanta el filosofo 8. Hay 3 filosofos sentados. 
Filósofo 0 comienza a comer
Filosofo 8 comienza a pensar
Ten. 5 ha sido liberado por filo. 4
Ten. 5 ha sido cogido por filo. 6
Filósofo 4 suelta ten. izq. 5
Filósofo 4 suelta ten. der. 3
Filósofo 6 solicita ten. der.5
Filósofo 6 comienza a comer
Ten. 3 ha sido liberado por filo. 4
Filósofo 4 se levanta de la mesa.
Filosofo 4 comienza a pensar
El camarero ve que se levanta el filosofo 4. Hay 2 filosofos sentados. 
El camarero sienta al filosofo 2. Hay 3 filosofos sentados. 
Filósofo 2 solicita sentarse en la mesa.
Filósofo 2 se sienta en la mesa.
Filósofo 2 solicita ten. izq.3
Ten. 3 ha sido cogido por filo. 2
Filósofo 2 solicita ten. der.1
Filósofo 4 solicita sentarse en la mesa.
Filósofo 4 se sienta en la mesa.
Filósofo 4 solicita ten. izq.5
